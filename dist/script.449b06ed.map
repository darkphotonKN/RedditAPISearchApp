{"version":3,"sources":["redditapi.js","script.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","console","log","err","searchForm","document","getElementById","searchInput","querySelector","resultArea","errorStatus","addEventListener","e","value","errMsg","errMsgClass","showErrorMessage","preventDefault","reddit","output","forEach","searchURL","post","url","imageURL","preview","undefined","images","source","cutText","title","selftext","errMsgArea","classList","remove","add","innerHTML","message","className","div","createElement","appendChild","createTextNode","errorOutput","text","limit","trimmed","indexOf","substring"],"mappings":"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","file":"script.449b06ed.map","sourceRoot":"..","sourcesContent":["\r\n// Using Reddit API to make a search function for the application\r\n\r\n/*\r\nfetch() method usage NOTES\r\n---------------------------\r\n\r\nThe \"fetch()\" method takes one mandatory argument, the path to the resource\r\nyou want to fetch. It returns a \"Promise\" that resolves to the \"Response\" to that\r\nrequest, whether or not it is successful. You can optionally pass in an init options \r\nobject as a second argument.\r\n\r\nOnce a \"Response\" is retrieved, there are a number of methods available \r\nto define what the body content is and how it should be handled. \r\n\r\nYou can create a request and response directly using the \"Request()\" and \r\n\"Response\" constructors, but are unlikely to do this directly. These are more likely to be \r\ncreated as results of other API actions (for example, FetchEvent.respondWidth) from \r\nservice workers).\r\n\r\n*/\r\n\r\nexport default {\r\n    \r\n    search: function(searchTerm, searchLimit, sortBy) {\r\n        return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`) // ? - allows use url para parameter, q - query\r\n        .then(res => res.json()) // it gives us the response, we want the response in JSON\r\n        .then(data => data.data.children.map(data => data.data)) // gives us the data\r\n        .catch(err => console.log(err)); \r\n    }\r\n\r\n    // solutions of problem  \r\n\r\n    \r\n\r\n\r\n}","// js file using reddit api\r\nimport reddit from './redditapi';\r\n\r\n// primary global variables \r\nconst searchForm = document.getElementById('search-form');\r\nconst searchInput = document.querySelector('.search-input');\r\nconst resultArea = document.getElementById('result');\r\n\r\n// error status \r\nlet errorStatus = false;\r\n\r\n// 'submit' - if form is submitted, perform callback \r\nsearchForm.addEventListener('submit', (e) => {\r\n    \r\n    // get search term\r\n    const searchTerm = searchInput.value;\r\n    // get radio check boxes\r\n    const sortBy = document.querySelector('input[class=\"sort\"]:checked').value;\r\n    // get limit\r\n    const searchLimit = document.getElementById('limit').value;\r\n\r\n    // check search field is not empty\r\n    const errMsg = 'Please add search term!';\r\n    const errMsgClass = 'alert-messages';\r\n    if(searchTerm===\"\") {\r\n        showErrorMessage(errMsg, errMsgClass);\r\n    } \r\n    else {\r\n        errorStatus = false;\r\n    }\r\n\r\n    // clear search input\r\n    searchInput.value = \"\";\r\n    e.preventDefault();\r\n\r\n    // error status is false (no errors) then run search functionality: \r\n    if(errorStatus==false) {\r\n\r\n    // search Reddit u                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            sing Reddit API, separate JS file\r\n\r\n        // returns a promise (code in written in redditapi.js) so use .then() to get the data\r\n        reddit.search(searchTerm, searchLimit, sortBy).then\r\n        (res => {\r\n            console.log(res);\r\n            let output = '<div id=\"results-title\">Results</div>'; // initial output title for DOM before adding query results below\r\n            \r\n    // loop through posts \r\n            res.forEach(post => {\r\n                const searchURL = post.url;\r\n\r\n                // get image from reddit api\r\n                let imageURL = '';\r\n                if(post.preview != undefined) {  \r\n                    if(post.preview.images[0].source.url != undefined) {\r\n                        imageURL = post.preview.images[0].source.url;\r\n                    } else {\r\n                        imageURL = 'https://jsdeveloper.io/wp-content/uploads/2017/10/1024px-Reddit_logo_and_wordmark.svg_.png';\r\n                    }\r\n                } else {\r\n                    imageURL = 'https://jsdeveloper.io/wp-content/uploads/2017/10/1024px-Reddit_logo_and_wordmark.svg_.png';\r\n                }\r\n                \r\n                // create output layout\r\n                output += `\r\n                \r\n                <div class=\"result-wrap\">\r\n                    <div class=\"title\">${cutText(post.title, 50)} ..</div>\r\n                    <div id=\"image-wrap\"> <img class=\"image\" src=\"${imageURL}\"> </div>\r\n                    <div class=\"output\">${cutText(post.selftext, 200)} .. <a href=\"${searchURL}\">Read More</a></div>\r\n                    \r\n                </div>\r\n                `;\r\n            });\r\n            \r\n            // hide any previous errors\r\n            const errMsgArea = document.querySelector(`.${errMsgClass}`);\r\n            if(errMsgArea != null) {\r\n                errMsgArea.classList.remove(errMsgClass);\r\n            }\r\n\r\n            // show results \r\n            resultArea.classList.add('show'); // highlight output area\r\n            resultArea.innerHTML = output; // add finalized search results \r\n        });\r\n\r\n    \r\n\r\n    \r\n    }\r\n\r\n    // testing\r\n    // console.log();\r\n});\r\n\r\n\r\n// function to show error message if user has not put any search terms\r\nfunction showErrorMessage(message, className) {\r\n    // remove current results if there are any \r\n    resultArea.classList.remove('show');\r\n    \r\n\r\n    // create div to hold message \r\n    const div = document.createElement('div');\r\n    \r\n    // insert error message\r\n    div.appendChild(document.createTextNode(message));\r\n    div.classList.add(\"error-message\");\r\n    // insert into DOM\r\n    // get parent\r\n    const errorOutput = document.getElementById('errors');\r\n\r\n\r\n    // styling to display message\r\n    // clear error box and put \"error\"\r\n    errorOutput.innerHTML = \"Error\";\r\n    // append error message into div\r\n    errorOutput.appendChild(div);\r\n    errorOutput.classList.add(className);\r\n       // notify error is true so do not show results\r\n    errorStatus = true;\r\n}\r\n\r\n// cuts text down into smaller parts \r\n\r\nfunction cutText(text, limit) {\r\n    const trimmed = text.indexOf(' ', limit); // trims at the point \"limit\" \r\n    if(trimmed==-1) return text; // if indexOf not found it returns -1\r\n\r\n    return text.substring(0, trimmed);\r\n}"]}